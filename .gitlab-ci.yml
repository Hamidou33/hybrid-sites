default:
  interruptible: true
  image: node:lts-alpine

stages:
  - dependencies
  - quality
  - assemble
  - deploy

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apk to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apk update && apk add --no-cache openssh-client )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Give the right permissions, otherwise ssh-add will refuse to add files
  ## Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 400 ~/.ssh/id_rsa
  - ssh-add ~/.ssh/id_rsa

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh



variables:
  NODE_OPTIONS: "--max-old-space-size=4096"
  CI_DEBUG_TRACE: "true"

install_dependencies:
  stage: dependencies
  script:
    - cd front-angular && npm install --prefer-offline
    - cd ../api-nest-pando && npm install --prefer-offline
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules

quality:
  stage: quality
  script:
    - cd front-angular && npm run test
    - cd ../api-nest-pando && npm run test
    - npm run lint
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

assemble:
  stage: assemble
  script:
    - cd front-angular && npm run build
    - cd ../api-nest-pando && npm run build
  artifacts:
    paths:
      - front-angular/dist
      - api-nest-pando/dist
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

deploy:
  stage: deploy
  script:
    - scp -o StrictHostKeyChecking=no -i "$SSH_PRIVATE_KEY" -P "$SSH_PORT" -r front-angular/dist/pandoramid/* "$SSH_USER@$SSH_HOST:$HOSTINGER_PATH"
  environment:
    name: production
  only:
    - master

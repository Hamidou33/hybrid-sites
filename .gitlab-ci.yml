default:
  interruptible: true
  image: node:lts-alpine

stages:
  - dependencies
  - quality
  - assemble
  - deploy

variables:
  NODE_OPTIONS: "--max-old-space-size=4096"

install_dependencies:
  stage: dependencies
  script:
    # Install dependencies for both Angular and NestJS
    - cd front-angular && npm install --prefer-offline
    - cd ../api-nest-pando && npm install --prefer-offline
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules

quality:
  stage: quality
  script:
    # Run Angular tests
    - cd front-angular && npm run test
    # Run NestJS tests
    - cd ../api-nest-pando && npm run test
    # Run linting for both Angular and NestJS
    - npm run lint
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

assemble:
  stage: assemble
  script:
    # Build Angular and NestJS applications
    - cd front-angular && npm run build
    - cd ../api-nest-pando && npm run build
  artifacts:
    paths:
      - front-angular/dist
      - api-nest-pando/dist
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

.deploy:
  stage: deploy
  variables:
    NODE_ENV: production
  needs: [ "assemble" ]
  before_script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"

deploy-dev:
  extends: .deploy
  variables:
    NODE_ENV: development
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"
    - echo "Making actions to deploy to dev"
    - echo "Deployed to $CI_ENVIRONMENT_NAME"

deploy-staging:
  extends: .deploy
  rules:
    - when: manual
      allow_failure: true
  variables:
    NODE_ENV: staging
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"
    - echo "Making actions to deploy to staging"
    - echo "Deployed to $CI_ENVIRONMENT_NAME"

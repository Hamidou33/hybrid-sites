default:
  interruptible: true
  image: node:lts-alpine

stages:
  - dependencies
  - quality
  - assemble
  - deploy

variables:
  NODE_OPTIONS: "--max-old-space-size=4096"
  SSH_PORT: "65002"
  HOSTINGER_USER: "u641340594"
  HOSTINGER_HOST: "154.49.245.22"
  HOSTINGER_PATH: "public_html"

install_dependencies:
  stage: dependencies
  script:
    # Install dependencies for both Angular and NestJS
    - cd front-angular && npm install --prefer-offline
    - cd ../api-nest-pando && npm install --prefer-offline
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules

quality:
  stage: quality
  script:
    # Run Angular tests
    - cd front-angular && npm run test
    # Run NestJS tests
    - cd ../api-nest-pando && npm run test
    # Run linting for both Angular and NestJS
    - npm run lint
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

assemble:
  stage: assemble
  script:
    # Build Angular and NestJS applications
    - cd front-angular && npm run build
    - cd ../api-nest-pando && npm run build
  artifacts:
    paths:
      - front-angular/dist
      - api-nest-pando/dist
  cache:
    key:
      files:
        - front-angular/package.json
        - api-nest-pando/package.json
    paths:
      - front-angular/node_modules
      - api-nest-pando/node_modules
    policy: pull

deploy_to_hostinger:
  stage: deploy
  script:
    - apk update && apk add --no-cache lftp
    # DÃ©ploiement via FTP
    - lftp -e "open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST; mirror -R front-angular/dist /public_html; exit"
  variables:
    FTP_USERNAME: "u641340594"
  only:
    - master
